def task2_1(a, b):
    '''
    По данным сторонам прямоугольника вычислить его периметр, площадь и длину диагонали

    :param a: сторона треугольника
    :param b: сторона треугольника
    :return: None
    '''

    # Вычисление периметра
    perimeter = 2 * (a + b)

    # Вычисление площади
    S = a * b

    # Вычисление диагонали
    diagonal = (a*2 + b*2) ** 0.5

    # Вывод с использованием форматирования оператором %
    print("Периметр прямоугольника: %.2f" % perimeter)
    print("Площадь прямоугольника: %.2f" % S)
    print("Длина диагонали прямоугольника: %.2f" % diagonal)

    # Вывод с использованием форматирования методом format
    print("Периметр прямоугольника: {:.2f}". format (perimeter))
    print ("Площадь прямоугольника: {:.2f}". format (S))
    print("Длина диагонали прямоугольника: {:.2f}".format (diagonal))

    # Вывод с использованием f-строк
    print(f"Периметр прямоугольника: {perimeter :.2f}")
    print(f"Площадь прямоугольника: {S:.2f}")
    print(f"Длина диагонали прямоугольника: {diagonal:.2f}")




def task2_2(x):
    '''
    Остаток от деления младшего разряда целой части x на 3 - четное число или целая часть x является 7 или 9-й степенью числа 2

    :param x: Вводимое число
    :return: isSpecial
    '''
    import math

    isSpecial = (1000 * (x - math.floor(x)) > x) or (math.floor(x) % 7 == 0)
    return isSpecial




def task2_3(x):
    '''
    Составить программу для вычисления значений функции y = f(x) при произвольных значениях x. (a, b – константы)

    :param x: Аргумент функции
    :return: Значение функции
    '''
    from math import log, cos
    a, b = 7.1, 4.2

    if x <= 3:
        y= b - x**2 - 1
    elif x >= 8:
        y = (log (x + a))**1/2
    elif 3 < x < 8:
        y = (cos(a*(x**2) + 3)**2)
    return y




def task2_4(age):
    '''
    Составить программу, которая по возрасту человека (вводится с клавиатуры как
    целое число) определяет его принадлежность к возрастной группе: от 0 до 13 -
    мальчик; от 14 до 20 - юноша; от 21 до 70 - мужчина; более 70 - старец

    :param age: Вводимый возраст
    :return: None
    '''

    match age:
        case age if 0 <= age <= 13:
            print("Мальчик")
        case age if 14 <= age <= 20:
            print("Юноша")
        case age if 21 <= age <= 70:
            print("Мужчина")
        case age if age > 70:
            print("Старец")
        case _:
            print("Некорректный возраст")


